-- MySQL Script generated by MySQL Workbench
-- Sun Jan 14 16:28:09 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema alfred
-- -----------------------------------------------------
-- 快速开发平台alfred的数据库
DROP SCHEMA IF EXISTS `alfred` ;

-- -----------------------------------------------------
-- Schema alfred
--
-- 快速开发平台alfred的数据库
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `alfred` DEFAULT CHARACTER SET utf8 ;
USE `alfred` ;

-- -----------------------------------------------------
-- Table `alfred`.`sys_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_user` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_user` (
  `user_id` BIGINT NOT NULL COMMENT '用户id',
  `username` VARCHAR(32) NOT NULL COMMENT '用户名',
  `email` VARCHAR(32) NOT NULL COMMENT '邮箱',
  `mobile` VARCHAR(32) NOT NULL COMMENT '手机号码',
  `password` VARCHAR(32) NOT NULL COMMENT '登陆密码',
  `salt` VARCHAR(32) NOT NULL COMMENT '盐',
  `status` TINYINT(8) NOT NULL,
  `create_time` DATETIME NOT NULL COMMENT '创建时间',
  `update_time` DATETIME NULL COMMENT '更新时间',
  `login_time` DATETIME NULL COMMENT '登陆时间',
  `icon` VARCHAR(128) NULL COMMENT '头像',
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
COMMENT = '系统用户';


-- -----------------------------------------------------
-- Table `alfred`.`sys_user_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_user_token` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_user_token` (
  `user_id` BIGINT NOT NULL COMMENT '用户id',
  `token` VARCHAR(128) NOT NULL,
  `expire_time` DATETIME NOT NULL COMMENT '过期时间',
  `update_time` DATETIME NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `token_UNIQUE` (`token` ASC))
ENGINE = InnoDB
COMMENT = '系统用户token';


-- -----------------------------------------------------
-- Table `alfred`.`sys_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_role` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_role` (
  `role_id` BIGINT NOT NULL COMMENT '角色id',
  `name` VARCHAR(32) NOT NULL COMMENT '名称',
  `remark` VARCHAR(256) NULL COMMENT '备注',
  `create_time` DATETIME NOT NULL COMMENT '创建时间',
  `update_time` DATETIME NULL COMMENT '更新时间',
  `create_user_id` BIGINT NULL COMMENT '创建者的id',
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB
COMMENT = '系统用户角色';


-- -----------------------------------------------------
-- Table `alfred`.`sys_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_permission` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_permission` (
  `permission_id` BIGINT NOT NULL,
  `name` VARCHAR(32) NOT NULL COMMENT '权限名称',
  `perms` VARCHAR(256) NOT NULL COMMENT '授权(多个用逗号分隔，如：user:list,user:create)',
  `remark` VARCHAR(256) NULL COMMENT '备注',
  `create_time` DATETIME NOT NULL,
  `order_num` INT NULL COMMENT '排序',
  `icon` VARCHAR(128) NULL,
  PRIMARY KEY (`permission_id`))
ENGINE = InnoDB
COMMENT = '系统权限';


-- -----------------------------------------------------
-- Table `alfred`.`sys_user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_user_role` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_user_role` (
  `id` BIGINT NOT NULL COMMENT 'id',
  `sys_user_id` BIGINT NOT NULL COMMENT '用户id',
  `sys_role_id` BIGINT NOT NULL COMMENT '角色id',
  INDEX `fk_sys_user_has_sys_role_sys_role1_idx` (`sys_role_id` ASC),
  INDEX `fk_sys_user_has_sys_role_sys_user_idx` (`sys_user_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_sys_user_has_sys_role_sys_user`
    FOREIGN KEY (`sys_user_id`)
    REFERENCES `alfred`.`sys_user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sys_user_has_sys_role_sys_role1`
    FOREIGN KEY (`sys_role_id`)
    REFERENCES `alfred`.`sys_role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户角色对应关系';


-- -----------------------------------------------------
-- Table `alfred`.`sys_role_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_role_permission` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_role_permission` (
  `id` BIGINT NOT NULL COMMENT 'id',
  `sys_role_id` BIGINT NOT NULL COMMENT '角色id',
  `sys_permission_id` BIGINT NOT NULL COMMENT '权限id',
  INDEX `fk_sys_role_has_sys_permission_sys_permission1_idx` (`sys_permission_id` ASC),
  INDEX `fk_sys_role_has_sys_permission_sys_role1_idx` (`sys_role_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_sys_role_has_sys_permission_sys_role1`
    FOREIGN KEY (`sys_role_id`)
    REFERENCES `alfred`.`sys_role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sys_role_has_sys_permission_sys_permission1`
    FOREIGN KEY (`sys_permission_id`)
    REFERENCES `alfred`.`sys_permission` (`permission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户权限关系表';


-- -----------------------------------------------------
-- Table `alfred`.`sys_menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_menu` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_menu` (
  `menu_id` BIGINT NOT NULL COMMENT '菜单id',
  `name` VARCHAR(32) NOT NULL COMMENT '名称',
  `parent_id` BIGINT NULL COMMENT '上级菜单id',
  `url` VARCHAR(128) NULL COMMENT 'url',
  `type` INT NOT NULL COMMENT '类型   0：目录   1：菜单   2：按钮',
  `remark` VARCHAR(256) NULL COMMENT '备注',
  `icon` VARCHAR(128) NOT NULL COMMENT '图标',
  PRIMARY KEY (`menu_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alfred`.`sys_permission_menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alfred`.`sys_permission_menu` ;

CREATE TABLE IF NOT EXISTS `alfred`.`sys_permission_menu` (
  `id` BIGINT NOT NULL COMMENT 'id',
  `sys_permission_id` BIGINT NOT NULL COMMENT '权限id',
  `sys_menu_id` BIGINT NOT NULL COMMENT '菜单id',
  INDEX `fk_sys_permission_has_sys_menu_sys_menu1_idx` (`sys_menu_id` ASC),
  INDEX `fk_sys_permission_has_sys_menu_sys_permission1_idx` (`sys_permission_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_sys_permission_has_sys_menu_sys_permission1`
    FOREIGN KEY (`sys_permission_id`)
    REFERENCES `alfred`.`sys_permission` (`permission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sys_permission_has_sys_menu_sys_menu1`
    FOREIGN KEY (`sys_menu_id`)
    REFERENCES `alfred`.`sys_menu` (`menu_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '权限菜单关系表';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
